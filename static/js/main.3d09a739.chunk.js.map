{"version":3,"sources":["components/files.js","App.js","reportWebVitals.js","index.js"],"names":["Files","files","useState","id","filesToDownload","setFilesToDownload","checked","setChecked","map","file","class","onClick","fetch","method","headers","Headers","then","res","json","data","console","log","window","open","focus","catch","getDownloadURL","url","name","size","content_type","type","className","onChange","fileId","splice","indexOf","defaultChecked","App","state","setState","this","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wOA4EeA,EA1ED,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAAY,EAEqBC,mBAAS,CAAC,CAAEC,GAAI,MAFrC,mBAElBC,EAFkB,KAEDC,EAFC,OAGKH,oBAAS,GAHd,mBAGlBI,EAHkB,KAGTC,EAHS,KAgDzB,OACI,gCACI,iCAAQ,6CACPH,EAAgBI,KAAI,SAACC,GAAD,OACjB,qBAAKC,MAAM,OAAX,SACI,qBAAKA,MAAM,YAAX,SACI,qBAAIA,MAAM,gCAAV,iBAA+CD,EAAKN,aAI/DF,EAAMO,KAAI,SAACC,GAAD,OACP,qBAAKC,MAAM,OAAX,SACI,sBAAKA,MAAM,YAAX,UACI,oBAAIA,MAAM,aAAaC,QAAS,kBA/BpD,SAAwBF,GACpBG,MAAM,+BAAiCH,EAAKN,GAAK,OAAQ,CACrDU,OAAQ,MACRC,QAAS,IAAIC,QAAQ,CACjB,cAAiB,8BACjB,eAAgB,uBAGnBC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAACG,GACHC,QAAQC,IAAIF,GACFG,OAAOC,KAAKJ,EAAM,UACxBK,WAEPC,MAAML,QAAQC,KAiBmCK,CAAejB,EAAKkB,MAA1D,SAAiElB,EAAKmB,OACtE,qBAAIlB,MAAM,gCAAV,iBAA+CD,EAAKN,GAApD,UAA+DM,EAAKoB,QACpE,mBAAGnB,MAAM,YAAT,SAAsBD,EAAKqB,eAC3B,mBAAGpB,MAAM,YAAT,SACI,uBAAOqB,KAAK,WAAWC,UAAS,mBAAcvB,EAAKN,IAAM8B,SAAU,kBA5DtEC,EA4DwFzB,EAAKN,GA3D9GiB,QAAQC,IAAI,gBACPf,GAYDc,QAAQC,IAAI,WACZd,GAAW,GACXF,EAAmB,CAEfD,EAAgB+B,OAAO/B,EAAgBgC,QAAQF,GAAS,KAE5Dd,QAAQC,IAAIjB,KAjBZgB,QAAQC,IAAI,WACZd,GAAW,GACXF,EAAmB,GAAD,mBACXD,GADW,CAEd,CACID,GAAI+B,MAGZd,QAAQC,IAAIjB,KAXpB,IAAqB8B,GA4DkGG,eAAgB/B,kBCrC5HgC,E,4MAxBbC,MAAQ,CACNtC,MAAO,I,kEAEY,IAAD,OAClBW,MAAM,kFAAmF,CACvFC,OAAQ,MACRC,QAAS,IAAIC,QAAQ,CACnB,cAAiB,8BACjB,eAAgB,uBAGjBC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAACG,GACL,EAAKqB,SAAS,CAAEvC,MAAOkB,EAAKlB,WAE7BwB,MAAML,QAAQC,O,+BAGjB,OACE,cAAC,EAAD,CAAOpB,MAAOwC,KAAKF,MAAMtC,Y,GApBbyC,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB7B,MAAK,YAAkD,IAA/C8B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.3d09a739.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst Files = ({ files }) => {\r\n\r\n    const [filesToDownload, setFilesToDownload] = useState([{ id: \"\" }]);\r\n    const [checked, setChecked] = useState(false);\r\n\r\n    function handleCheck(fileId) {\r\n        console.log(\"TEST #1\");\r\n        if (!checked) {\r\n            console.log(\"TEST #2\");\r\n            setChecked(true);\r\n            setFilesToDownload([\r\n                ...filesToDownload,\r\n                {\r\n                    id: fileId\r\n                }\r\n            ]);\r\n            console.log(filesToDownload);\r\n        }\r\n        else {\r\n            console.log(\"TEST #3\");\r\n            setChecked(false);\r\n            setFilesToDownload([\r\n                //filesToDownload.filter(file => file.id.includes(fileId))\r\n                filesToDownload.splice(filesToDownload.indexOf(fileId), 1)\r\n            ]);\r\n            console.log(filesToDownload);\r\n        }\r\n    }\r\n\r\n\r\n    function getDownloadURL(file) {\r\n        fetch('https://api.put.io/v2/files/' + file.id + '/url', {\r\n            method: 'GET',\r\n            headers: new Headers({\r\n                'Authorization': 'Bearer UFFX2DMM7B2OJJCTQKFZ',\r\n                'Content-Type': 'application/json'\r\n            })\r\n        })\r\n            .then(res => res.json())\r\n            .then((data) => {\r\n                console.log(data);\r\n                var win = window.open(data, '_blank');\r\n                win.focus();\r\n            })\r\n            .catch(console.log)\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <center><h1>File List</h1></center>\r\n            {filesToDownload.map((file) => (\r\n                <div class=\"card\">\r\n                    <div class=\"card-body\">\r\n                        <h6 class=\"card-subtitle mb-2 text-muted\">Id: {file.id}</h6>\r\n                    </div>\r\n                </div>\r\n            ))}\r\n            {files.map((file) => (\r\n                <div class=\"card\">\r\n                    <div class=\"card-body\">\r\n                        <h5 class=\"card-title\" onClick={() => getDownloadURL(file.url)}>{file.name}</h5>\r\n                        <h6 class=\"card-subtitle mb-2 text-muted\">Id: {file.id} Size: {file.size}</h6>\r\n                        <p class=\"card-text\">{file.content_type}</p>\r\n                        <p class=\"card-text\">\r\n                            <input type=\"checkbox\" className={`checkbox-${file.id}`} onChange={() => handleCheck(file.id)} defaultChecked={checked} />\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Files","// src/App.js\r\n\r\nimport React, { Component } from 'react';\r\nimport Files from './components/files';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    files: []\r\n  }\r\n  componentDidMount() {\r\n    fetch('https://api.put.io/v2/files/list?sort_by=NAME_ASC&file_type=FOLDER&parent_id=-1', {\r\n      method: 'GET',\r\n      headers: new Headers({\r\n        'Authorization': 'Bearer UFFX2DMM7B2OJJCTQKFZ',\r\n        'Content-Type': 'application/json'\r\n      })\r\n    })\r\n      .then(res => res.json())\r\n      .then((data) => {\r\n        this.setState({ files: data.files })\r\n      })\r\n      .catch(console.log)\r\n  }\r\n  render() {\r\n    return (\r\n      <Files files={this.state.files} />\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
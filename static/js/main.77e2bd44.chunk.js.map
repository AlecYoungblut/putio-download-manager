{"version":3,"sources":["components/files.js","App.js","reportWebVitals.js","index.js"],"names":["Files","files","useState","id","directoryFiles","setDirectoryFiles","map","file","class","onClick","folder","length","fetch","method","headers","Headers","then","res","json","data","catch","console","log","name","subfile","parent_id","window","open","url","focus","getDownloadURL","App","state","parentFolders","forEach","element","setState","this","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wOAuHeA,EArHD,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAAY,EAEqBC,mBAAS,CAAC,CAAEC,GAAI,MAFrC,gCAGKD,oBAAS,IAHd,gCAImBA,mBAAS,KAJ5B,mBAIlBE,EAJkB,KAIFC,EAJE,KA2EzB,OACI,gCACI,iCAAQ,6CAQPJ,EAAMK,KAAI,SAACC,GAAD,OACP,qBAAKC,MAAM,OAAX,SACI,sBAAKA,MAAM,YAAX,UACI,oBAAIA,MAAM,aAAaC,QAAS,kBAxC9BC,EAwCiDH,OAtC/DH,GAAkBA,EAAeO,OAAS,EAC1CN,EAAkB,IAQlBO,MAAM,8CAAgDF,EAAOP,GAAK,iDAAkD,CAChHU,OAAQ,MACRC,QAAS,IAAIC,QAAQ,CACjB,cAAiB,8BACjB,eAAgB,uBAGnBC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAACG,GACHd,EAAkBc,EAAKlB,UAE1BmB,MAAMC,QAAQC,MAtB3B,IAAsBZ,GAwCF,SACKH,EAAKgB,OASTnB,EAAeE,KAAI,SAACkB,GACjB,GAAIjB,EAAKJ,KAAOqB,EAAQC,UACpB,OACI,qBAAKjB,MAAM,YAAX,SAEI,oBAAIA,MAAM,aAAaC,QAAS,kBAxEpE,SAAwBF,GAEpBK,MAAM,+BAAiCL,EAAO,OAAQ,CAClDM,OAAQ,MACRC,QAAS,IAAIC,QAAQ,CACjB,cAAiB,8BACjB,eAAgB,uBAGnBC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAACG,GACOO,OAAOC,KAAKR,EAAKS,KACvBC,WAEPT,MAAMC,QAAQC,KA0DmDQ,CAAeN,EAAQrB,KAA7D,SACKqB,EAAQD,wBCnEtCQ,E,4MAjCbC,MAAQ,CACN/B,MAAO,I,kEAEY,IAAD,OAClBW,MAAM,kFAAmF,CACvFC,OAAQ,MACRC,QAAS,IAAIC,QAAQ,CACnB,cAAiB,8BACjB,eAAgB,uBAGjBC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAACG,GACLE,QAAQC,IAAIH,EAAKlB,OACjB,IAAIgC,EAAgB,GACpBd,EAAKlB,MAAMiC,SAAQ,SAAAC,GACS,IAAtBA,EAAQV,WAAoC,iBAAjBU,EAAQZ,OACrCU,EAAa,sBAAOA,GAAP,CAAsBE,QAGvCd,QAAQC,IAAIW,GACZ,EAAKG,SAAS,CAAEnC,MAAOgC,OAGxBb,MAAMC,QAAQC,O,+BAGjB,OACE,cAAC,EAAD,CAAOrB,MAAOoC,KAAKL,MAAM/B,Y,GA7BbqC,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBzB,MAAK,YAAkD,IAA/C0B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.77e2bd44.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst Files = ({ files }) => {\r\n\r\n    const [filesToDownload, setFilesToDownload] = useState([{ id: \"\" }]);\r\n    const [checked, setChecked] = useState(false);\r\n    const [directoryFiles, setDirectoryFiles] = useState([]);\r\n\r\n    function handleCheck(fileId) {\r\n        console.log(\"TEST #1\");\r\n        if (!checked) {\r\n            console.log(\"TEST #2\");\r\n            setChecked(true);\r\n            setFilesToDownload([\r\n                ...filesToDownload,\r\n                {\r\n                    id: fileId\r\n                }\r\n            ]);\r\n            console.log(filesToDownload);\r\n        }\r\n        else {\r\n            console.log(\"TEST #3\");\r\n            setChecked(false);\r\n            setFilesToDownload([\r\n                //filesToDownload.filter(file => file.id.includes(fileId))\r\n                filesToDownload.splice(filesToDownload.indexOf(fileId), 1)\r\n            ]);\r\n            console.log(filesToDownload);\r\n        }\r\n    }\r\n\r\n\r\n    function getDownloadURL(file) {\r\n        //https://api.put.io/v2/files/690563972/url\r\n        fetch('https://api.put.io/v2/files/' + file + '/url', {\r\n            method: 'GET',\r\n            headers: new Headers({\r\n                'Authorization': 'Bearer UFFX2DMM7B2OJJCTQKFZ',\r\n                'Content-Type': 'application/json'\r\n            })\r\n        })\r\n            .then(res => res.json())\r\n            .then((data) => {\r\n                var win = window.open(data.url);\r\n                win.focus();\r\n            })\r\n            .catch(console.log)\r\n    }\r\n\r\n    function getFilesList(folder) {\r\n        //check if folder, if folder return html\r\n        if (directoryFiles && directoryFiles.length > 0) {\r\n            setDirectoryFiles([]);\r\n        }\r\n        //check if file, return download\r\n\r\n        // if (folder.file_type === 'FOLDER') {\r\n        //     return <p>OMG</p>\r\n        // }\r\n        else {\r\n            fetch('https://api.put.io/v2/files/list?parent_id=' + folder.id + '&sort_by=NAME_ASC&file_type=AUDIO,VIDEO,FOLDER', {\r\n                method: 'GET',\r\n                headers: new Headers({\r\n                    'Authorization': 'Bearer UFFX2DMM7B2OJJCTQKFZ',\r\n                    'Content-Type': 'application/json'\r\n                })\r\n            })\r\n                .then(res => res.json())\r\n                .then((data) => {\r\n                    setDirectoryFiles(data.files);\r\n                })\r\n                .catch(console.log)\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <center><h1>File List</h1></center>\r\n            {/* {filesToDownload.map((file) => (\r\n                <div class=\"card\">\r\n                    <div class=\"card-body\">\r\n                        <h6 class=\"card-subtitle mb-2 text-muted\">Id: {file.id}</h6>\r\n                    </div>\r\n                </div>\r\n            ))} */}\r\n            {files.map((file) => (\r\n                <div class=\"card\">\r\n                    <div class=\"card-body\">\r\n                        <h5 class=\"card-title\" onClick={() => getFilesList(file)}>\r\n                            {file.name}\r\n                        </h5>\r\n                        {/* <h6 class=\"card-subtitle mb-2 text-muted\">Id: {file.id} Size: {file.size}</h6>\r\n                        <p class=\"card-text\">{file.content_type}</p>\r\n                        <p class=\"card-text\">\r\n\r\n                        </p> */}\r\n                        {/* setDirectoryFiles */}\r\n\r\n                        {directoryFiles.map((subfile) => {\r\n                            if (file.id === subfile.parent_id) {\r\n                                return (\r\n                                    <div class=\"card-body\">\r\n                                        {/* <h5 class=\"card-title\" onClick={(file.file_type !== 'FOLDER') ? getDownloadURL(subfile.id) : undefined}> */}\r\n                                        <h5 class=\"card-title\" onClick={() => getDownloadURL(subfile.id)}>\r\n                                            {subfile.name}\r\n                                        </h5>\r\n                                    </div>\r\n                                )\r\n                            }\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Files","// src/App.js\r\n\r\nimport React, { Component } from 'react';\r\nimport Files from './components/files';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    files: []\r\n  }\r\n  componentDidMount() {\r\n    fetch('https://api.put.io/v2/files/list?sort_by=NAME_ASC&file_type=FOLDER&parent_id=-1', {\r\n      method: 'GET',\r\n      headers: new Headers({\r\n        'Authorization': 'Bearer UFFX2DMM7B2OJJCTQKFZ',\r\n        'Content-Type': 'application/json'\r\n      })\r\n    })\r\n      .then(res => res.json())\r\n      .then((data) => {\r\n        console.log(data.files)\r\n        var parentFolders = [];\r\n        data.files.forEach(element => {\r\n          if (element.parent_id === 0 && element.name === \"For Download\") {\r\n            parentFolders = [...parentFolders, element];\r\n          }\r\n        });\r\n        console.log(parentFolders)\r\n        this.setState({ files: parentFolders })\r\n        //this.setState({ files: data.files })\r\n      })\r\n      .catch(console.log)\r\n  }\r\n  render() {\r\n    return (\r\n      <Files files={this.state.files} />\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}